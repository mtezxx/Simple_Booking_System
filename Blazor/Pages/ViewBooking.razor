@page "/ViewBooking"
@using HttpClients.ClientInterfaces
@using global::Shared.Models
@using global::Shared.DTOs
@inject IResourceService ResourceService
@inject IBookingService BookingService

<h3>View Resources</h3>

@if (resources == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Quantity Available</th>
            <th>Action</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var resource in resources)
        {
            <tr>
                <td>@resource.Name</td>
                <td>@resource.Quantity</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => OpenModal(resource.Id)">Book</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@if (isModalOpen)
{
    <div class="modal-backdrop" style="background-color: rgba(0,0,0,0.5); position: fixed; top: 0; left: 0; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; z-index: 1000;">
        <div class="modal-content" style="background-color: white; padding: 20px; border-radius: 5px; width: 500px; box-shadow: 0 4px 6px rgba(0,0,0,0.2);">
            <div class="modal-header">
                <h5 class="modal-title">Book Resource</h5>
                <button class="btn btn-secondary" @onclick="CloseModal">Close</button>
            </div>
            <div class="modal-body">
                <EditForm Model="this">
                    <div class="form-group">
                        <label for="startDate">Start Date:</label>
                        <input type="date" class="form-control" @bind="startDate" />
                
                        <label for="endDate">End Date:</label>
                        <input type="date" class="form-control" @bind="endDate" />
                
                        <label for="quantity">Quantity:</label>
                        <input type="number" class="form-control" @bind="quantity" />
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary" @onclick="ConfirmBooking">Confirm Booking</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}

@code {
    private ICollection<Resource> resources;
    private ICollection<Booking> bookings;
    private bool isModalOpen = false;
    private DateOnly startDate = DateOnly.FromDateTime(DateTime.Today);
    private DateOnly endDate = DateOnly.FromDateTime(DateTime.Today.AddDays(1));
    private int quantity = 1;
    private int selectedResourceId;
    private string resultMsg = "";
    private string color = "";


    protected override async Task OnInitializedAsync()
    {
        try
        {
            resources = await ResourceService.GetAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching resources: {ex.Message}");
        }
    }

    private void OpenModal(int resourceId)
    {
        selectedResourceId = resourceId;
        isModalOpen = true;
    }

    private void CloseModal()
    {
        isModalOpen = false;
    }

    private async Task ConfirmBooking()
    {
        resultMsg = "";

        try
        {
            await BookingService.BookResourceAsync(new BookingCreationDto(
                startDate,
                endDate,
                quantity,
                selectedResourceId
            ));
            Console.WriteLine($"Booking resource with ID: {selectedResourceId} - Start Date: {startDate}, End Date: {endDate}, Quantity: {quantity}");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }

        CloseModal();
        resultMsg = "Booking successful!";
    }
}
